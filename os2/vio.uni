(* Video Input Output (Vio) functions (32-bit version) *)
module vio;

abi sub32;

(* Vio handles *)
type HVIO=USHORT;
type PHVIO=^HVIO;

(* VioCreatePS format constants *)
const FORMAT_CGA     = $0001;
const FORMAT_VGA     = $0001;
const FORMAT_4BYTE   = $0003;
const FORMAT_EXTEND  = $0003;
const FORMAT_UNICODE = $0002;

(* options for VioQueryFonts *)
const VQF_PUBLIC     = $0001;
const VQF_PRIVATE    = $0002;
const VQF_ALL        = $0003;

(* Cursor structure for VioSetCurType and VioGetCurType() *)
type VIOCURSORINFO=structure
       yStart: USHORT;
       cEnd:   USHORT;
       cx:     USHORT;
       attr:   USHORT;
     end;


type PVIOCURSORINFO=^VIOCURSORINFO;

(* Mode structure for VioSetMode and VioGetMode (field added for 32 bit alignment) *)
type VIOMODEINFO=structure
       cb: USHORT;            (*  structure length  *)
       fbType: UCHAR;        (*  mode type  *)
       color: UCHAR;         (*  number of colors  *)
       col: USHORT;           (*  number of columns  *)
       row: USHORT;           (*  number of rows  *)
       hres: USHORT;          (*  horizontal size in pels  *)
       vres: USHORT;          (*  vertical size in pels  *)
       fmt_ID: UCHAR;        (*  format of attributes  *)
       attrib: UCHAR;        (*  length of attributes  *)
       resvd: USHORT;         (*  Reserved   (added field)  *)
       buf_addr: ULONG;
       buf_length: ULONG;
       full_length: ULONG;
       partial_length: ULONG;
       ext_data_addr: PCH;
    end;

type PVIOMODEINFO=^VIOMODEINFO;

(* VIOMODEINFO.fbType constants *)
const VGMT_OTHER          = 1;
const VGMT_COLOR          = 1;
const VGMT_GRAPHICS       = 2;
const VGMT_DISABLEBURST   = 4;
const VGMT_NOTBIOS        = 8;

(* VIOMODEINFO.color constants *)
const COLORS_2           =  1;
const COLORS_4           =  2;
const COLORS_16          =  4;
const COLORS_256         =  8;
const COLORS_64K         = 16;
const COLORS_16M         = 24;

(* Return types for VioCheckCharType *)
const VCC_SBCSCHAR        = 0;
const VCC_DBCSFULLCHAR    = 1;
const VCC_DBCS1STHALF     = 2;
const VCC_DBCS2NDHALF     = 3;

(* Values for graphics mode screen synchronization *)
const VSRWI_SAVEANDREDRAW = 0;
const VSRWI_REDRAW        = 1;

const VSRWN_SAVE          = 0;
const VSRWN_REDRAW        = 1;

const UNDOI_GETOWNER      = 0;
const UNDOI_RELEASEOWNER  = 1;

const UNDOK_ERRORCODE     = 0;
const UNDOK_TERMINATE     = 1;

const LOCKIO_NOWAIT       = 0;
const LOCKIO_WAIT         = 1;

const LOCK_SUCCESS        = 0;
const LOCK_FAIL           = 1;

(* Values for VioSetAnsi and VioGetAnsi *)
const ANSI_ON             = 1;
const ANSI_OFF            = 0;

(* Values for VioPopup *)
const VMWR_POPUP          = 0;
const VMWN_POPUP          = 0;
const VP_NOWAIT           = 0;
const VP_WAIT             = 1;
const VP_OPAQUE           = 0;
const VP_TRANSPARENT      = 2;

(* VIOCONFIGINFO.adapter constants *)
const DISPLAY_MONOCHROME =  0;
const DISPLAY_CGA        =  1;
const DISPLAY_EGA        =  2;
const DISPLAY_VGA        =  3;
const DISPLAY_8514A      =  7;
const DISPLAY_IAA        =  8;
const DISPLAY_XGA        =  9;
const DISPLAY_SVGA       = 10;
const DISPLAY_NONVGA     = 12;

(* VIOCONFIGINFO.display constants *)
const MONITOR_MONOCHROME =  0;
const MONITOR_COLOR      =  1;
const MONITOR_ENHANCED   =  2;
const MONITOR_8503       =  3;
const MONITOR_851X_COLOR =  4;
const MONITOR_8514       =  9;
const MONITOR_FLATPANEL  = 10;
const MONITOR_LCD640     = 10;
const MONITOR_8507_8604  = 11;
const MONITOR_8515       = 12;
const MONITOR_9515       = 15;
const MONITOR_9517       = 17;
const MONITOR_9518       = 18;
const MONITOR_OEM        = 19;
const MONITOR_LCD800     = 21;
const MONITOR_LCD1024    = 22;


(* Configuration structure for VioGetConfig (all fields changed to ULONG) *)
type VIOCONFIGINFO=structure
        cb: ULONG;              (*  Size of data       *)
        adapter: ULONG;         (*  Adapter type       *)
        display: ULONG;         (*  Display type       *)
        cbMemory: ULONG;        (*  Adapter memory     *)
        Configuration: ULONG;   (*  Which config       *)
        Version: ULONG;         (*  Driver version     *)
        Flags: ULONG;           (*                     *)
        HWBufferSize: ULONG;    (*  State save size    *)
        FullSaveSize: ULONG;    (*  Buffer save size   *)
        PartSaveSize: ULONG;    (*  Partial save size  *)
        VideoID: ULONG;         (*  Adapter ID         *)
        VideoData: ULONG;       (*  Adapter user data  *)
    end;

type PVIOCONFIGINFO=^VIOCONFIGINFO;

const VIO_CONFIG_CURRENT  = 0;
const VIO_CONFIG_PRIMARY  = 1;
const VIO_CONFIG_SECONDARY= 2;

(* Structures for VioSetState and VioGetState *)
type VIOPALSTATE=structure
        cb: USHORT;
        type: USHORT;
        iFirst: USHORT;
        acolor: array[1] of USHORT;
    end;
type PVIOPALSTATE=^VIOPALSTATE;

type VIOOVERSCAN=structure
        cb: USHORT;
        type: USHORT;
        color: USHORT;
    end;
type PVIOOVERSCAN=^VIOOVERSCAN;

type VIOINTENSITY=structure
        cb: USHORT;
        type: USHORT;
        fs: USHORT;
    end;
type PVIOINTENSITY=^VIOINTENSITY;

type VIOCOLORREG=structure
        cb: USHORT;
        type: USHORT;
        firstcolorreg: USHORT;
        numcolorregs: USHORT;
        colorregaddr: PCH;
    end;

type PVIOCOLORREG=^VIOCOLORREG;

type VIOSETULINELOC=structure
        cb: USHORT;
        type: USHORT;
        scanline: USHORT;
    end;

type PVIOSETULINELOC=^VIOSETULINELOC;

type VIOSETTARGET=structure
        cb: USHORT;
        type: USHORT;
        defaultalgorithm: USHORT;
    end;

type PVIOSETTARGET=^VIOSETTARGET;

(* first parameter registration constants   *)
const VR_VIOGETCURPOS            = $00000001;
const VR_VIOGETCURTYPE           = $00000002;
const VR_VIOGETMODE              = $00000004;
const VR_VIOGETBUF               = $00000008;
const VR_VIOGETPHYSBUF           = $00000010;
const VR_VIOSETCURPOS            = $00000020;
const VR_VIOSETCURTYPE           = $00000040;
const VR_VIOSETMODE              = $00000080;
const VR_VIOSHOWBUF              = $00000100;
const VR_VIOREADCHARSTR          = $00000200;
const VR_VIOREADCELLSTR          = $00000400;
const VR_VIOWRTNCHAR             = $00000800;
const VR_VIOWRTNATTR             = $00001000;
const VR_VIOWRTNCELL             = $00002000;
const VR_VIOWRTTTY               = $00004000;
const VR_VIOWRTCHARSTR           = $00008000;

const VR_VIOWRTCHARSTRATT        = $00010000;
const VR_VIOWRTCELLSTR           = $00020000;
const VR_VIOSCROLLUP             = $00040000;
const VR_VIOSCROLLDN             = $00080000;
const VR_VIOSCROLLLF             = $00100000;
const VR_VIOSCROLLRT             = $00200000;
const VR_VIOSETANSI              = $00400000;
const VR_VIOGETANSI              = $00800000;
const VR_VIOPRTSC                = $01000000;
const VR_VIOSCRLOCK              = $02000000;
const VR_VIOSCRUNLOCK            = $04000000;
const VR_VIOSAVREDRAWWAIT        = $08000000;
const VR_VIOSAVREDRAWUNDO        = $10000000;
const VR_VIOPOPUP                = $20000000;
const VR_VIOENDPOPUP             = $40000000;
const VR_VIOPRTSCTOGGLE          = $80000000;

(* second parameter registration constants  *)
const VR_VIOMODEWAIT             = $00000001;
const VR_VIOMODEUNDO             = $00000002;
const VR_VIOGETFONT              = $00000004;
const VR_VIOGETCONFIG            = $00000008;
const VR_VIOSETCP                = $00000010;
const VR_VIOGETCP                = $00000020;
const VR_VIOSETFONT              = $00000040;
const VR_VIOGETSTATE             = $00000080;
const VR_VIOSETSTATE             = $00000100;

function VioDeRegister       (): USHORT;
function VioRegister         (pszModName: PSZ; pszEntryName: PSZ; flFun1: ULONG; flFun2: ULONG): USHORT;
function VioGlobalReg        (pszModName: PSZ; pszEntryName: PSZ; flFun1: ULONG; flFun2: ULONG; usReturn: USHORT): USHORT;

function VioGetAnsi          (out Ansi:   USHORT;
                              in  Handle: HVIO): USHORT;

function VioGetCp            (in  Reserved:   USHORT;
                              out IdCodePage: USHORT;
                              in  Handle:     HVIO): USHORT;

function VioGetCurPos        (out Row:    USHORT;
                              out Column: USHORT;
                              in  Handle: HVIO): USHORT;

function VioGetCurType       (out CursorInfo: VIOCURSORINFO;
                              in  Handle:     HVIO): USHORT;

(* Missed VioGetDeviceCellSize *)

function VioGetMode          (inout ModeInfo: VIOMODEINFO;
                              in    Handle:   HVIO): USHORT;

function VioReadCellStr      (out   CellStr: CHAR;
                              inout Count:   USHORT;
                              in    Row:     USHORT;
                              in    Column:  USHORT;
                              in    Handle:  HVIO): USHORT;

function VioReadCharStr      (out   CellStr: CHAR;
                              inout Count:   USHORT;
                              in    Row:     USHORT;
                              in    Column:  USHORT;
                              in    Handle:  HVIO): USHORT;

function VioScrollDown       (in TopRow:   USHORT;
                              in LeftCol:  USHORT;
                              in BotRow:   USHORT;
                              in RightCol: USHORT;
                              in Lines:    USHORT;
                              in Cell:     PBYTE;
                              in Handle:   HVIO): USHORT;

function VioScrollDn         (in TopRow:   USHORT;
                              in LeftCol:  USHORT;
                              in BotRow:   USHORT;
                              in RightCol: USHORT;
                              in Lines:    USHORT;
                              in Cell:     PBYTE;
                              in Handle:   HVIO): USHORT;

function VioScrollLeft       (in TopRow:   USHORT;
                              in LeftCol:  USHORT;
                              in BotRow:   USHORT;
                              in RightCol: USHORT;
                              in Columns:  USHORT;
                              in Cell:     PBYTE;
                              in Handle:   HVIO): USHORT;

function VioScrollRight      (in TopRow:   USHORT;
                              in LeftCol:  USHORT;
                              in BotRow:   USHORT;
                              in RightCol: USHORT;
                              in Columns:  USHORT;
                              in Cell:     PBYTE;
                              in Handle:   HVIO): USHORT;

function VioScrollUp         (in TopRow:   USHORT;
                              in LeftCol:  USHORT;
                              in BotRow:   USHORT;
                              in RightCol: USHORT;
                              in Lines:    USHORT;
                              in Cell:     PBYTE;
                              in Handle:   HVIO): USHORT;

function VioSetAnsi          (in Ansi:   USHORT;
                              in Handle: HVIO): USHORT;

function VioSetCp            (in Reserved:   USHORT;
                              in IdCodePage: USHORT;
                              in Handle:     HVIO): USHORT;

function VioSetCurPos        (in Row:    USHORT;
                              in Column: USHORT;
                              in Handle: HVIO): USHORT;

function VioSetCurType       (in CursorInfo: PVIOCURSORINFO;
                              in Handle:     HVIO): USHORT;

function VioSetMode          (in ModeInfo: PVIOMODEINFO;
                              in hvio:     HVIO): USHORT;

function VioWrtCellStr       (in CellStr: PCHAR;
                              in Count:   USHORT;
                              in Row:     USHORT;
                              in Column:  USHORT;
                              in Handle:  HVIO): USHORT;

function VioWrtCharStr       (in Str:    PCHAR;
                              in Count:  USHORT;
                              in Row:    USHORT;
                              in Column: USHORT;
                              in Handle: HVIO): USHORT;

function VioWrtCharStrAttr   (in Str:    PCHAR;
                              in Count:  USHORT;
                              in Row:    USHORT;
                              in Column: USHORT;
                              in pAttr:  PBYTE;
                              in Handle: HVIO): USHORT;

function VioWrtCharStrAtt    (in pch:      PCCH;
                              in cb:       USHORT;
                              in usRow:    USHORT;
                              in usColumn: USHORT;
                              in pAttr:    PBYTE;
                              in hvio: HVIO): USHORT;

function VioWrtNAttr         (in Attr:   PBYTE;
                              in Count:  USHORT;
                              in Row:    USHORT;
                              in Column: USHORT;
                              in Handle: HVIO): USHORT;

function VioWrtNCell         (in Cell:   PBYTE;
                              in Count:  USHORT;
                              in Row:    USHORT;
                              in Column: USHORT;
                              in Handle: HVIO): USHORT;

function VioWrtNChar         (in Char:   PCHAR;
                              in Count:  USHORT;
                              in Row:    USHORT;
                              in Column: USHORT;
                              in Handle: HVIO): USHORT;

function VioWrtTTY           (in Str:   PCHAR;
                              in Count: USHORT;
                              in Handle: HVIO): USHORT;

function VioGetState         (in pState: PVOID; in Handle: HVIO): USHORT;

function VioSetState         (in pState: PVOID; in Handle: HVIO): USHORT;

function VioGetConfig        (in  ConfigId: USHORT;
                              out vioin:    VIOCONFIGINFO;
                              in  hvio:     HVIO): USHORT;

end.
