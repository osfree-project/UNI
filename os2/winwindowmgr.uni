module winwindowmgr;

   (* WM_CREATE structure *)

   type CREATESTRUCT=structure    (* crst *)
         pPresParams: PVOID;
         pCtlData: PVOID;
         id: ULONG;
         hwndInsertBehind: HWND;
         hwndOwner: HWND;
         cy: LONG;
         cx: LONG;
         y: LONG;
         x: LONG;
         flStyle: ULONG;
         pszText: PSZ;
         pszClass: PSZ;
         hwndParent: HWND;
     end;
   type PCREATESTRUCT=^CREATESTRUCT;

   (* WinQueryClassInfo() structure *)

   type CLASSINFO=structure    (* clsi *)
         flClassStyle: ULONG;
         pfnWindowProc: PFNWP;
         cbWindowData: ULONG;
    end;
   type PCLASSINFO=^CLASSINFO;

function WinSubclassWindow(in hwnd: HWND;
                                        in pfnwp: PFNWP): PFNWP;

function WinQueryClassName(in hwnd: HWND;
                                      in cchMax: LONG;
                                      out pch: CHAR): LONG;

function WinQueryClassInfo(in hab: HAB;
                                     in pszClassName: PCSZ;
                                     out pClassInfo: CLASSINFO): BOOL;

function WinQueryActiveWindow(in hwndDesktop: HWND): HWND;

function WinIsThreadActive(in hab: HAB): BOOL;

function WinQuerySysModalWindow(in hwndDesktop: HWND): HWND;


function WinSetSysModalWindow(in hwndDesktop: HWND;
                                        in hwnd: HWND): BOOL;


function WinQueryWindowUShort(in hwnd: HWND;
                                           in index: LONG): USHORT;

function WinSetWindowUShort(in hwnd: HWND;
                                         in index: LONG;
                                         in us: USHORT): BOOL;

function WinQueryWindowULong(in hwnd: HWND;
                                           in index: LONG): ULONG;

function WinSetWindowULong(in hwnd: HWND;
                                         in index: LONG;
                                         in ul: ULONG): BOOL;

function WinQueryWindowPtr(in hwnd: HWND;
                                        in index: LONG): PVOID;

function WinSetWindowPtr(in hwnd: HWND;
                                       in index: LONG;
                                       in p: PVOID): BOOL;

function WinSetWindowBits(in hwnd: HWND;
                                        in index: LONG;
                                        in flData: ULONG;
                                        in flMask: ULONG): BOOL;

      (*** Standard WinQueryWindowUShort/ULong() indices *******************)
   const QWS_USER                 =  0;
   const QWS_ID                   =  (-1);
   const QWS_MIN                  =  (-1);

   const QWL_USER                  = 0;
   const QWL_STYLE                 = (-2);
   const QWP_PFNWP                 = (-3);
   const QWL_HMQ                   = (-4);
   const QWL_RESERVED              = (-5);

   const QWL_PENDATA               = (-7);

   const QWL_BD_ATTR               = (-9);
   const QWL_BD_STAT               = (-10);
   const QWL_KBDLAYER              = (-11);

   const QWL_MIN                   = (-11);

      (*** WC_FRAME WinQueryWindowUShort/ULong() indices *******************)
   const QWL_HHEAP                  = $0004;
   const QWL_HWNDFOCUSSAVE          = $0018;
   const QWL_DEFBUTTON              = $0040;
   const QWL_PSSCBLK                = $0048;
   const QWL_PFEPBLK                = $004c;
   const QWL_PSTATBLK               = $0050;

   const QWS_FLAGS                  = $0008;
   const QWS_RESULT                 = $000a;
   const QWS_XRESTORE               = $000c;
   const QWS_YRESTORE               = $000e;
   const QWS_CXRESTORE              = $0010;
   const QWS_CYRESTORE              = $0012;
   const QWS_XMINIMIZE              = $0014;
   const QWS_YMINIMIZE              = $0016;


      (*** Window enumeration **********************************************)
type HENUM=LHANDLE;  (* henum *)

function WinBeginEnumWindows(in hwnd: HWND): HENUM;
function WinGetNextWindow(in henum: HENUM): HWND;
function WinEndEnumWindows(in henum: HENUM): BOOL;


function WinWindowFromPoint(in hwnd: HWND;
                                     in pptl: PPOINTL;
                                     in fChildren: BOOL): HWND;

function WinMapWindowPoints(in hwndFrom: HWND;
                                      in hwndTo: HWND;
                                      in prgptl: PPOINTL;
                                      in cwpt: LONG): BOOL;


   (* More window painting functions *)

function WinValidateRect(in hwnd: HWND;
                                   in prcl: PRECTL;
                                   in fIncludeChildren: BOOL): BOOL;

function WinValidateRegion(in hwnd: HWND;
                                     in hrgn: HRGN;
                                     in fIncludeChildren: BOOL): BOOL;

function WinWindowFromDC(in hdc: HDC): HWND;

function WinQueryWindowDC(in hwnd: HWND): HDC;

function WinGetScreenPS(in hwndDesktop: HWND): HPS;

function WinLockWindowUpdate(in hwndDesktop: HWND;
                                          in hwndLockUpdate: HWND): BOOL;

function WinLockVisRegions(in hwndDesktop: HWND;
                                       in fLock: BOOL): BOOL;

function WinQueryUpdateRect(in hwnd: HWND;
                                      out prcl: RECTL): BOOL;

function WinQueryUpdateRegion(in hwnd: HWND;
                                       in hrgn: HRGN): LONG;

function WinExcludeUpdateRegion(in hps: HPS;
                                         in hwnd: HWND): LONG;

   (* WinQueryClipRegion return codes *)
const QCRGN_ERROR                = 0;
const QCRGN_OK                   = 1;
const QCRGN_NO_CLIP_REGION       = 2;

function WinQueryClipRegion(in hwnd: HWND;
                                     in hrgnClip: HRGN): LONG;

function WinSetClipRegion(in hwnd: HWND;
                                   in hrgnClip: HRGN): BOOL;

end.

