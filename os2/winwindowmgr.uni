module winwindowmgr;

   (* WM_CREATE structure *)

   type CREATESTRUCT=structure    (* crst *)
         pPresParams: PVOID;
         pCtlData: PVOID;
         id: ULONG;
         hwndInsertBehind: HWND;
         hwndOwner: HWND;
         cy: LONG;
         cx: LONG;
         y: LONG;
         x: LONG;
         flStyle: ULONG;
         pszText: PSZ;
         pszClass: PSZ;
         hwndParent: HWND;
     end;
   type PCREATESTRUCT=^CREATESTRUCT;

   (* WinQueryClassInfo() structure *)

   type CLASSINFO=structure    (* clsi *)
         flClassStyle: ULONG;
         pfnWindowProc: PFNWP;
         cbWindowData: ULONG;
    end;
   type PCLASSINFO=^CLASSINFO;

function WinSubclassWindow(hwnd: HWND;
                                        pfnwp: PFNWP): PFNWP;

function WinQueryClassName(hwnd: HWND;
                                      cchMax: LONG;
                                      pch: PCH): LONG;
function WinQueryClassInfo(hab: HAB;
                                     pszClassName: PCSZ;
                                     pClassInfo: PCLASSINFO): BOOL;

function WinQueryActiveWindow(hwndDesktop: HWND): HWND;

function WinIsThreadActive(hab: HAB): BOOL;

function WinQuerySysModalWindow(hwndDesktop: HWND): HWND;


function WinSetSysModalWindow(hwndDesktop: HWND;
                                        hwnd: HWND): BOOL;


function WinQueryWindowUShort(hwnd: HWND;
                                           index: LONG): USHORT;
function WinSetWindowUShort(hwnd: HWND;
                                         index: LONG;
                                         us: USHORT): BOOL;
function WinQueryWindowULong(hwnd: HWND;
                                           index: LONG): ULONG;
function WinSetWindowULong(hwnd: HWND;
                                         index: LONG;
                                         ul: ULONG): BOOL;
function WinQueryWindowPtr(hwnd: HWND;
                                        index: LONG): PVOID;
function WinSetWindowPtr(hwnd: HWND;
                                       index: LONG;
                                       p: PVOID): BOOL;
function WinSetWindowBits(hwnd: HWND;
                                        index: LONG;
                                        flData: ULONG;
                                        flMask: ULONG): BOOL;

      (*** Standard WinQueryWindowUShort/ULong() indices *******************)
   const QWS_USER                 =  0;
   const QWS_ID                   =  (-1);
   const QWS_MIN                  =  (-1);

   const QWL_USER                  = 0;
   const QWL_STYLE                 = (-2);
   const QWP_PFNWP                 = (-3);
   const QWL_HMQ                   = (-4);
   const QWL_RESERVED              = (-5);

   const QWL_PENDATA               = (-7);

   const QWL_BD_ATTR               = (-9);
   const QWL_BD_STAT               = (-10);
   const QWL_KBDLAYER              = (-11);

   const QWL_MIN                   = (-11);

      (*** WC_FRAME WinQueryWindowUShort/ULong() indices *******************)
   const QWL_HHEAP                  = $0004;
   const QWL_HWNDFOCUSSAVE          = $0018;
   const QWL_DEFBUTTON              = $0040;
   const QWL_PSSCBLK                = $0048;
   const QWL_PFEPBLK                = $004c;
   const QWL_PSTATBLK               = $0050;

   const QWS_FLAGS                  = $0008;
   const QWS_RESULT                 = $000a;
   const QWS_XRESTORE               = $000c;
   const QWS_YRESTORE               = $000e;
   const QWS_CXRESTORE              = $0010;
   const QWS_CYRESTORE              = $0012;
   const QWS_XMINIMIZE              = $0014;
   const QWS_YMINIMIZE              = $0016;


      (*** Window enumeration **********************************************)
type HENUM=LHANDLE;  (* henum *)

function WinBeginEnumWindows(hwnd: HWND): HENUM;
function WinGetNextWindow(henum: HENUM): HWND;
function WinEndEnumWindows(henum: HENUM): BOOL;


function WinWindowFromPoint(hwnd: HWND;
                                     pptl: PPOINTL;
                                     fChildren: BOOL): HWND;

function WinMapWindowPoints(hwndFrom: HWND;
                                      hwndTo: HWND;
                                      prgptl: PPOINTL;
                                      cwpt: LONG): BOOL;


   (* More window painting functions *)

function WinValidateRect(hwnd: HWND;
                                   prcl: PRECTL;
                                   fIncludeChildren: BOOL): BOOL;

function WinValidateRegion(hwnd: HWND;
                                     hrgn: HRGN;
                                     fIncludeChildren: BOOL): BOOL;

function WinWindowFromDC(hdc: HDC): HWND;

function WinQueryWindowDC(hwnd: HWND): HDC;

function WinGetScreenPS(hwndDesktop: HWND): HPS;

function WinLockWindowUpdate(hwndDesktop: HWND;
                                          hwndLockUpdate: HWND): BOOL;

function WinLockVisRegions(hwndDesktop: HWND;
                                       fLock: BOOL): BOOL;

function WinQueryUpdateRect(hwnd: HWND;
                                      prcl: PRECTL): BOOL;

function WinQueryUpdateRegion(hwnd: HWND;
                                       hrgn: HRGN): LONG;

function WinExcludeUpdateRegion(hps: HPS;
                                         hwnd: HWND): LONG;

   (* WinQueryClipRegion return codes *)
const QCRGN_ERROR                = 0;
const QCRGN_OK                   = 1;
const QCRGN_NO_CLIP_REGION       = 2;

function WinQueryClipRegion(hwnd: HWND;
                                     hrgnClip: HRGN): LONG;

function WinSetClipRegion(hwnd: HWND;
                                   hrgnClip: HRGN): BOOL;

end.
