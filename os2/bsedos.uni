module bsedos;

(*************************************************************************\
* CCHMAXPATH is the maximum fully qualified path name length including  *
* the drive letter, colon, backslashes and terminating NULL.            *
\*************************************************************************)
const CCHMAXPATH=260;

(*************************************************************************\
* CCHMAXPATHCOMP is the maximum individual path component name length   *
* including a terminating NULL.                                         *
\*************************************************************************)
const CCHMAXPATHCOMP=256;

uses dosprocesscommon;
uses dosprocess;
uses dosfilemgrcommon;
uses dosmemmgrcommon;
uses dossemaphorescommon;
uses dossemaphores;
uses dosdatetimecommon;
uses dosdatetime;
uses dosresourcescommon;
uses dosresources;
uses dossesmgrfilemgr; (* Need to move to both areas *)
uses dosfilemgr;
uses dosmodulemgr;
uses dosnls;
uses dosexceptions;
uses dosmisc;
uses dossesmgr;
uses dosdevices;
uses dosnmpipes;
uses dosprofile;
uses dosmvdm;
uses dosspinlock;
uses bdcalls;

(*** Pipe and queue support *)


      type HQUEUE=LHANDLE;
      type PHQUEUE=^HQUEUE;
      type REQUESTDATA=structure
                pid: PID;
                ulData: ULONG;
        end;
      type PREQUESTDATA=^REQUESTDATA;

      const QUE_FIFO              =0;
      const QUE_LIFO              =1;
      const QUE_PRIORITY          =2;
      const QUE_NOCONVERT_ADDRESS =0;
      const QUE_CONVERT_ADDRESS   =4;


function  DosCreatePipe(phfRead: PHFILE;
                                     phfWrite: PHFILE;
                                     cb: ULONG): APIRET;

function  DosCloseQueue(hq: HQUEUE): APIRET;

function  DosCreateQueue(phq: PHQUEUE;
                                      priority: ULONG;
                                      pszName: PCSZ): APIRET;

function  DosOpenQueue(ppid: PPID;
                                    phq: PHQUEUE;
                                    pszName: PCSZ): APIRET;

function  DosPeekQueue(hq: HQUEUE;
                                    pRequest: PREQUESTDATA;
                                    pcbData: PULONG;
                                    ppbuf: PPVOID;
                                    element: PULONG;
                                    nowait: BOOL32;
                                    ppriority: PBYTE;
                                    hsem: HEV): APIRET;

function  DosPurgeQueue(hq: HQUEUE): APIRET;

function  DosQueryQueue(hq: HQUEUE;
                                     pcbEntries: PULONG): APIRET;

function  DosReadQueue(hq: HQUEUE;
                                    pRequest: PREQUESTDATA;
                                    pcbData: PULONG;
                                    ppbuf: PPVOID;
                                    element: ULONG;
                                    wait: BOOL32;
                                    ppriority: PBYTE;
                                    hsem: HEV): APIRET;

function  DosWriteQueue(hq: HQUEUE;
                                      request: ULONG;
                                      cbData: ULONG;
                                      pbData: PVOID;
                                      priority: ULONG): APIRET;



end.


