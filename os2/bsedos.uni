module bsedos;

(************************************************************************
* CCHMAXPATH is the maximum fully qualified path name length including  *
* the drive letter, colon, backslashes and terminating NULL.            *
*************************************************************************)
const CCHMAXPATH=260;

(************************************************************************
* CCHMAXPATHCOMP is the maximum individual path component name length   *
* including a terminating NULL.                                         *
*************************************************************************)
const CCHMAXPATHCOMP=256;

uses dosprocesscommon;
uses dosprocess;
uses dosfilemgrcommon;
uses dosmemmgrcommon;
uses dossemaphorescommon;
uses dossemaphores;
uses dosdatetimecommon;
uses dosdatetime;
uses dosresourcescommon;
uses dosresources;
uses dossesmgrfilemgr; (* Need to move to both areas *)
uses dosfilemgr;
uses dosmodulemgr;
uses dosnls;
uses dosexceptions;
uses dosmisc;
uses dossesmgr;
uses dosdevices;
uses dosnmpipes;
uses dosprofile;
uses dosmvdm;
uses dosspinlock;
uses bdcalls;

(*** Pipe and queue support *)


type HQUEUE=LHANDLE;
type PHQUEUE=^HQUEUE;
type REQUESTDATA=structure
          pid: PID;
          ulData: ULONG;
     end;
type PREQUESTDATA=^REQUESTDATA;

const QUE_FIFO              =0;
const QUE_LIFO              =1;
const QUE_PRIORITY          =2;
const QUE_NOCONVERT_ADDRESS =0;
const QUE_CONVERT_ADDRESS   =4;


function  DosCreatePipe(out hfRead:  HFILE;
                        out hfWrite: HFILE;
                        in  cb:      ULONG): APIRET;

function  DosCloseQueue(in hq: HQUEUE): APIRET;

function  DosCreateQueue(out hq:       HQUEUE;
                         in  priority: ULONG;
                         in  pszName:  PCSZ): APIRET;

function  DosOpenQueue(out ppid:    PID;
                       out phq:     HQUEUE;
                       in  pszName: PCSZ): APIRET;

function  DosPeekQueue(in    hq:       HQUEUE;
                       out   pRequest: REQUESTDATA;
                       out   pcbData:  ULONG;
                       out   ppbuf:    PVOID;
                       inout element:  ULONG;
                       in    nowait:   BOOL32;
                       out   priority: BYTE;
                       in    hsem:     HEV): APIRET;

function  DosPurgeQueue(in hq: HQUEUE): APIRET;

function  DosQueryQueue(in  hq:         HQUEUE;
                        out pcbEntries: ULONG): APIRET;

function  DosReadQueue(in  hq:        HQUEUE;
                       out pRequest:  REQUESTDATA;
                       out pcbData:   ULONG;
                       out ppbuf:     PVOID;
                       in  element:   ULONG;
                       in  wait:      BOOL32;
                       out ppriority: BYTE;
                       in  hsem:      HEV): APIRET;

function  DosWriteQueue(in hq:       HQUEUE;
                        in request:  ULONG;
                        in cbData:   ULONG;
                        in pbData:   PVOID;
                        in priority: ULONG): APIRET;


end.
