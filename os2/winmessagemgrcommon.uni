#if (defined(INCL_WINMESSAGEMGR) || !defined(INCL_NOCOMMON))

   /* QMSG structure */
   typedef struct _QMSG    /* qmsg */
   {
      HWND    hwnd;
      ULONG   msg;
      MPARAM  mp1;
      MPARAM  mp2;
      ULONG   time;
      POINTL  ptl;
      ULONG   reserved;
   } QMSG;
   typedef QMSG *PQMSG;

   /*** Standard Window Messages *******************************************/
   #define WM_NULL                    0x0000
   #define WM_CREATE                  0x0001
   #define WM_DESTROY                 0x0002

   #ifndef INCL_SAADEFS
   #endif /* !INCL_SAADEFS */

   #define WM_ENABLE                  0x0004
   #define WM_SHOW                    0x0005
   #define WM_MOVE                    0x0006
   #define WM_SIZE                    0x0007
   #define WM_ADJUSTWINDOWPOS         0x0008

   #define WM_CALCVALIDRECTS          0x0009

   #define WM_SETWINDOWPARAMS         0x000a
   #define WM_QUERYWINDOWPARAMS       0x000b
   #define WM_HITTEST                 0x000c
   #define WM_ACTIVATE                0x000d
   #define WM_SETFOCUS                0x000f
   #define WM_SETSELECTION            0x0010

   /* language support Winproc */
   #define WM_PPAINT                  0x0011
   #define WM_PSETFOCUS               0x0012
   #define WM_PSYSCOLORCHANGE         0x0013
   #define WM_PSIZE                   0x0014
   #define WM_PACTIVATE               0x0015
   #define WM_PCONTROL                0x0016

   #define WM_COMMAND                 0x0020
   #define WM_SYSCOMMAND              0x0021
   #define WM_HELP                    0x0022
   #define WM_PAINT                   0x0023

   #ifndef INCL_SAADEFS
      #define WM_TIMER                0x0024
      #define WM_SEM1                 0x0025
      #define WM_SEM2                 0x0026
      #define WM_SEM3                 0x0027
      #define WM_SEM4                 0x0028
   #endif /* !INCL_SAADEFS */

   #define WM_CLOSE                   0x0029
   #define WM_QUIT                    0x002a
   #define WM_SYSCOLORCHANGE          0x002b
   #define WM_SYSVALUECHANGED         0x002d
   #define WM_APPTERMINATENOTIFY      0x002e
   #define WM_PRESPARAMCHANGED        0x002f

   /* Control notification messages */
   #define WM_CONTROL                 0x0030
   #define WM_VSCROLL                 0x0031
   #define WM_HSCROLL                 0x0032
   #define WM_INITMENU                0x0033
   #define WM_MENUSELECT              0x0034
   #define WM_MENUEND                 0x0035
   #define WM_DRAWITEM                0x0036
   #define WM_MEASUREITEM             0x0037
   #define WM_CONTROLPOINTER          0x0038
   #define WM_QUERYDLGCODE            0x003a
   #define WM_INITDLG                 0x003b
   #define WM_SUBSTITUTESTRING        0x003c
   #define WM_MATCHMNEMONIC           0x003d
   #define WM_SAVEAPPLICATION         0x003e

   #define WM_SEMANTICEVENT           0x0490


   /*************************************************************************
   * Reserve a range of messages for help manager.  This range includes
   * public messages, defined below, and private ones, which need to be
   * reserved here to prevent clashing with application messages
   *************************************************************************/

   #define WM_HELPBASE                0x0F00 /* Start of msgs for help manager   */
   #define WM_HELPTOP                 0x0FFF /* End of msgs for help manager     */

   #define WM_USER                    0x1000

   /*** WM_COMMAND msg source codes ****************************************/
   #define CMDSRC_PUSHBUTTON      1
   #define CMDSRC_MENU            2
   #define CMDSRC_ACCELERATOR     3
   #define CMDSRC_FONTDLG         4
   #define CMDSRC_FILEDLG         5
   #define CMDSRC_PRINTDLG        6
   #define CMDSRC_COLORDLG        7
   #define CMDSRC_OTHER           0

   #pragma pack(1) /* force structure alignment packing */

   /*
   * The following structure and macro are used to access the
   * WM_COMMAND, WM_HELP, and WM_SYSCOMMAND message parameters:
   */
   typedef struct _COMMANDMSG    /* commandmsg */
   {
      USHORT  cmd;              /* mp1 */
      USHORT  unused;
      USHORT  source;           /* mp2 */
      USHORT  fMouse;
   } CMDMSG;
   typedef CMDMSG *PCMDMSG;

   #define COMMANDMSG(pmsg) \
   ((PCMDMSG)((PBYTE)pmsg + sizeof(MPARAM) ))

   #pragma pack()  /* restore packing to default */

   /*** The following structure is used by the WinQueryQueueInfo() routine */
   typedef struct _MQINFO    /* mqi */
   {
      ULONG   cb;
      PID     pid;
      TID     tid;
      ULONG   cmsgs;
      PVOID   pReserved;
   } MQINFO;
   typedef MQINFO *PMQINFO;

   MRESULT APIENTRY WinSendMsg(HWND hwnd,
                               ULONG msg,
                               MPARAM mp1,
                               MPARAM mp2);

   HMQ     APIENTRY WinCreateMsgQueue(HAB hab,
                                      LONG cmsg);

   BOOL    APIENTRY WinDestroyMsgQueue(HMQ hmq);

   BOOL    APIENTRY WinQueryQueueInfo(HMQ hmq,
                                      PMQINFO pmqi,
                                      ULONG cbCopy);

   #ifndef INCL_SAADEFS
      BOOL    APIENTRY WinCancelShutdown(HMQ hmq,
                                         BOOL fCancelAlways);
   #endif /* INCL_SAADEFS */

   BOOL    APIENTRY WinGetMsg(HAB hab,
                              PQMSG pqmsg,
                              HWND hwndFilter,
                              ULONG msgFilterFirst,
                              ULONG msgFilterLast);

   BOOL    APIENTRY WinPeekMsg(HAB hab,
                               PQMSG pqmsg,
                               HWND hwndFilter,
                               ULONG msgFilterFirst,
                               ULONG msgFilterLast,
                               ULONG fl);

   MRESULT APIENTRY WinDispatchMsg(HAB hab,
                                   PQMSG pqmsg);

   BOOL    APIENTRY WinPostMsg(HWND hwnd,
                               ULONG msg,
                               MPARAM mp1,
                               MPARAM mp2);

   BOOL    APIENTRY WinRegisterUserMsg(HAB hab,
                                       ULONG msgid,
                                       LONG datatype1,
                                       LONG dir1,
                                       LONG datatype2,
                                       LONG dir2,
                                       LONG datatyper);

   BOOL    APIENTRY WinRegisterUserDatatype(HAB hab,
                                            LONG datatype,
                                            LONG count,
                                            PLONG types);
#ifdef __cplusplus
   BOOL    APIENTRY WinSetMsgMode(HAB hab,
                                  PCSZ  classname,
                                  LONG control);
#else
   BOOL    APIENTRY WinSetMsgMode(HAB hab,
                                  PSZ classname,
                                  LONG control);
#endif

   BOOL    APIENTRY WinSetSynchroMode(HAB hab,
                                      LONG mode);

   /*** WinPeekMsg() constants *********************************************/
   #define PM_REMOVE                  0x0001
   #define PM_NOREMOVE                0x0000

   /*** WinRegisterUserDatatype datatypes defined in separate file *********/
   #ifdef INCL_WINTYPES
      #include <pmtypes.h>
   #endif /*INCL_WINTYPES*/

   /*** WinRegisterUserMsg direction codes *********************************/
   #define RUM_IN                     1
   #define RUM_OUT                    2
   #define RUM_INOUT                  3

   /*** WinSetMsgMode constants *******************************************/
   #define SMD_DELAYED                0x0001
   #define SMD_IMMEDIATE              0x0002

   /*** WinSetSynchroMode constants ***************************************/
   #define SSM_SYNCHRONOUS            0x0001
   #define SSM_ASYNCHRONOUS           0x0002
   #define SSM_MIXED                  0x0003

#endif /* WINMESSAGEMGR || !INCL_NOCOMMON       */
